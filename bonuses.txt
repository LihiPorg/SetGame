BONUS CHALLENGE FORM
--------------------

For each bonus challenge you have implemented, please replace the sentence "We are not entitled to this bonus."
with a short description of:

1. How it was implemented in your code
2. Where it was used (in which class methods).
3. How you tested that it is working correctly.

--------------------

1. Fully supporting all configuration fields and avoiding the use of magic numbers
The Answer:
    1. Instead of using magic numbers we used the parameters provided to us in the config file, and when it was needed we made fileds to hold the magic numbers. 
    2.In the three classes- table, player and the dealer. when ever we needed to define data bases and more. 
    for example- we limited the capacity of the blocking queue according to the config file. 
    3. We changed the parameters in the config file and checked how it affect our results. 


--------------------

2. Terminating all threads (that you created) gracefully and in reverse order to the order they were created in.
The Answer:
    1. we used a loop, where we interapted each player's thread in the reverse order of there creation. 
    2. In the dealer class (terminate function).
    3. We checked the printing of the log and saw at the end that the players thread are terminated in the reverse order.   

--------------------

3. Handling the config.turnTimeoutMillis value as follows:
config.turnTimeoutMillis < 0: display nothing.
config.turnTimeoutMillis = 0: display a timer since the last action (reshuffle or set collected).
Note: in modes without a countdown timer the dealer must ensure there is always at least one legal set on the table.

We are not entitled to this bonus.

--------------------

4. Making sure that the threads do not wake up unless some actual job needs to be done (e.g., a value needs to be
changed on the display, key input needs to be handled, etc.) and the only threads created by you are:
1 thread per player + 1 additional thread for non-human players.

The Answer:
1. As for the dealer- in the function sleepUntilWokenOrTimeout we made the dealer wait a second and wake up each second
to update the timer unless he is interupted by a player to check a set. only in the warn time where the dealer needs to update the timer 
at all times he is awake.
as for the player- we used the method take in the blocking queue so that the player will wait until he gets the dealerss response about the set and when we
wait for the pressingkey queue of the player to not be empty. So the player is active when he has somthing to do amd waiting when there is nothing for him to do.
2.In the player and the dealer classes.
3. Without it the code will not "look right" the the time will stuck some time. 